jQuery(document).ready(function () {

    // Google Analytic
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-74498739-2', 'auto');
    ga('send', 'pageview');

    // 2/3/4th level menu  offscreen fix
    var MainWindowWidth = jQuery(window).width();
    jQuery(window).resize(function () {
        MainWindowWidth = jQuery(window).width();
    });
    jQuery('.sf-menu ul li').mouseover(function () {
        // checks if third level menu exist
        var subMenuExist = jQuery(this).find('.nav-child').length;
        if (subMenuExist > 0) {
            var subMenuWidth = jQuery(this).find('.nav-child').width();
            var subMenuOffset = jQuery(this).find('.nav-child').parent().offset().left + subMenuWidth;
            // if sub menu is off screen, give new position
            if ((subMenuOffset + subMenuWidth) > MainWindowWidth) {
                var newSubMenuPosition = subMenuWidth + 3;
                $(this).find('.nav-child').first().css({
                    left: -newSubMenuPosition,
                    //top: '10px',
                });
            }
        }
    });

    $('#main-slider').flexslider({
        namespace: "flex-",           //{NEW} String: Prefix string attached to the class of every element generated by the plugin
        selector: ".slides > li",    //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
        animation: "fade",            //String: Select your animation type, "fade" or "slide"
        easing: "swing",           //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
        direction: "horizontal",      //String: Select the sliding direction, "horizontal" or "vertical"
        reverse: false,             //{NEW} Boolean: Reverse the animation direction
        animationLoop: true,              //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
        smoothHeight: false,             //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
        startAt: 0,                 //Integer: The slide that the slider should start on. Array notation (0 = first slide)
        slideshow: true,              //Boolean: Animate slider automatically
        slideshowSpeed: 5000,              //Integer: Set the speed of the slideshow cycling, in milliseconds
        animationSpeed: 600,               //Integer: Set the speed of animations, in milliseconds
        initDelay: 0,                 //{NEW} Integer: Set an initialization delay, in milliseconds
        randomize: false,             //Boolean: Randomize slide order

        // Usability features
        pauseOnAction: true,              //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
        pauseOnHover: false,             //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
        useCSS: true,              //{NEW} Boolean: Slider will use CSS3 transitions if available
        touch: true,              //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
        video: false,             //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

        // Primary Controls
        controlNav: false,              //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
        directionNav: false,              //Boolean: Create navigation for previous/next navigation? (true/false)
        prevText: "Previous",        //String: Set the text for the "previous" directionNav item
        nextText: "Next",            //String: Set the text for the "next" directionNav item

        // Secondary Navigation
        keyboard: true,              //Boolean: Allow slider navigating via keyboard left/right keys
        multipleKeyboard: false,             //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
        mousewheel: false,             //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
        pausePlay: false,             //Boolean: Create pause/play dynamic element
        pauseText: 'Pause',           //String: Set the text for the "pause" pausePlay item
        playText: 'Play',            //String: Set the text for the "play" pausePlay item

        // Special properties
        controlsContainer: "",                //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
        manualControls: "",                //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
        sync: "",                //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
        asNavFor: ""                //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider
    });

    //menu
    if (jQuery().superfish) {
        jQuery('ul.sf-menu').superfish({
            delay: 300,
            animation: {opacity: 'show', height: 'show'},
            //animation:   {opacity:'show'},
            animationOut: {opacity: 'hide'},
            speed: 'fast',
            disableHI: false,
            cssArrows: false,
            autoArrows: true
        });
    }

    //toTop
    if (jQuery().UItoTop) {
        jQuery().UItoTop({easingType: 'easeOutQuart'});
    }

    //single page localscroll and scrollspy + 80px / 72px
    var navHeight = jQuery('#header').outerHeight(true) + $("#header-sticky-wrapper").height();
    jQuery('body').scrollspy({
        target: '.mainmenu_wrap',
        offset: navHeight
    });

    if (jQuery().localScroll) {
        jQuery('#mainmenu').localScroll({
            duration: 1900,
            easing: 'easeOutQuart',
            offset: -100
        });
        jQuery('#header').localScroll({
            duration: 1900,
            easing: 'easeOutQuart',
            offset: -100
        });
    }

    $(".skill-level").each(function () {
        var skillAcquired = parseInt($(this).data("skill"));
        var skillCircle = "";
        for (var i = 0; i < 5; i++) {
            if (i < skillAcquired) {
                skillCircle += "<i class='fa fa-circle text-primary'></i>";
            }
            else {
                skillCircle += "<i class='fa fa-circle text-muted'></i>";
            }
        }
        $(this).html(skillCircle);
    });

    $(".rating-level").each(function () {
        var ratingAcquired = parseInt($(this).data("rating"));
        var ratingCircle = "";
        for (var i = 0; i < 5; i++) {
            if (i < ratingAcquired) {
                ratingCircle += "<i class='fa fa-circle text-primary'></i>";
            }
            else {
                ratingCircle += "<i class='fa fa-circle text-muted'></i>";
            }
        }
        $(this).html(ratingCircle);
    });

    $(".cv-nav").find("li").click(function () {
        $(this).siblings().removeClass("active");
        $(this).addClass("active");
    });
});

jQuery(window).load(function () {
    setTimeout(function () {
        jQuery('.progress-bar').addClass('stretchRight');
    }, 600);

    //stick header to top
    if (jQuery().sticky) {
        jQuery("#header").sticky({
                topSpacing: 0,
                scrollBeforeStick: 150
            },
            function () {
                jQuery("#header").stop().animate({opacity: 0}, 0).delay(500).stop().animate({opacity: 1}, 1000);
            },
            function () {
                jQuery("#header").stop().animate({opacity: 0}, 0).delay(50).stop().animate({opacity: 1}, 2000);
            }
        );

        jQuery("#mainmenu").sticky({
                topSpacing: 0,
                scrollBeforeStick: -140,
                bottomSpacing: 650
            },
            function () {
                jQuery("#mainmenu").show();
            }
        );
    }


    if (jQuery().flexslider) {
        var $mainSlider = jQuery('#mainslider');
        jQuery(".flexslider").flexslider({
            animation: "fade",
            useCSS: true,
            controlNav: true,
            // animationLoop: false,
            smoothHeight: true,
            slideshowSpeed: 5000,
            animationSpeed: 800,
            after: function (slider) {
                // bg-color1 - class for #mainslider
                var currentClass = $mainSlider.find('.flex-active-slide').attr('data-bg');
                $mainSlider.attr('class', currentClass);
            }
        });
    }

    jQuery('body').delay(1000).scrollspy('refresh');

    // preloader
    jQuery(".preloaderimg").fadeOut();
    jQuery(".preloader").delay(200).fadeOut("slow").delay(200, function () {
        jQuery(this).remove();
    });
});

jQuery(window).resize(function () {
    jQuery("#header").sticky('update');
    jQuery('body').scrollspy('refresh');
});